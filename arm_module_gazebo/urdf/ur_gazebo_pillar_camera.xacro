<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg robot_model)_robot">
  <!--
    This is a top-level xacro instantiating the Gazebo-specific version of the
    'ur_robot' macro (ie: 'ur_robot_gazebo') and passing it values for all its
    required arguments.

    This file should be considered the Gazebo-specific variant of the file
    with the same name in the ur_description package. It accepts the same
    arguments, but instead of configuring everything for a real robot, will
    generate a Gazebo-compatible URDF with a ros_control hardware_interface
    attached to it.

    Only use this top-level xacro if you plan on spawning the robot in Gazebo
    'by itself', without any gripper or any other geometry attached.

    If you need to attach an end-effector, camera or need to integrate the
    robot into a larger workcell and want to spawn that as a single entity in
    Gazebo, DO NOT EDIT THIS FILE.

    Instead: create a new top-level xacro, give it a proper name, include the
    required '.xacro' files, instantiate the models (ie: call the macros) and
    connect everything by adding the appropriate joints.
  -->

  <!--
    Import main macro.

    NOTE: this imports the Gazebo-wrapper main macro, NOT the regular
          xacro macro (which is hosted by ur_description).
  -->
  <!-- <xacro:include filename="$(find arm_module_gazebo)/urdf/ur_gazebo_pillar_camera_macro.xacro"/> -->
  <xacro:include filename="$(find ur_gazebo)/urdf/ur_macro.xacro"/>

  <xacro:include filename="$(find arm_module_ur5e_description)/urdf/inc/pillar_macro.xacro"/>

  <!-- <xacro:include filename="$(find arm_module_gazebo)/urdf/inc/random_camera_gazebo_macro.xacro"/> -->

  <xacro:include filename="$(find arm_module_ur5e_description)/urdf/inc/_d435.urdf.xacro" />
  <!-- <xacro:include filename="$(find arm_module_ur5e_description)/urdf/_d435.urdf.xacro" /> -->
  



  <!--Declare arguments -->
  <xacro:arg name="joint_limit_params" default=""/>
  <xacro:arg name="physical_params" default=""/>
  <xacro:arg name="kinematics_params" default=""/>
  <xacro:arg name="visual_params" default=""/>
  <!--
    legal values:
      - hardware_interface/PositionJointInterface
      - hardware_interface/VelocityJointInterface
      - hardware_interface/EffortJointInterface

    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  -->
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
  <xacro:ur_robot_gazebo
    prefix=""
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
  />

  <!-- Instantiate the pillar -->
  <xacro:pillar/>

  <!-- Define the camera mount link -->
  <link name="camera_mount">
    <!-- Visual Representation -->
    <visual>
      <geometry>
        <!-- Use the mesh for visual representation, scaled down 1000 times -->
        <mesh filename="package://arm_module_ur5e_description/meshes/d435_mount.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>

    <!-- Collision Representation -->
    <collision>
      <geometry>
        <!-- Use the same mesh for collision -->
        <mesh filename="package://arm_module_ur5e_description/meshes/d435_mount.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <!-- Joint connecting the camera mount to the tool0 of the robot -->
  <joint name="tool0_to_camera_mount" type="fixed">
    <parent link="tool0"/>
    <child link="camera_mount"/>
    <origin xyz="0 0 0.001" rpy="0 0 0"/>
  </joint>


  <!-- Instantiate the camera -->
  <xacro:arg name="use_nominal_extrinsics" default="false"/>
  <xacro:arg name="add_plug" default="false" />
  <xacro:arg name="use_mesh" default="true" />
  
  
  <!-- Instantiate the D435 camera -->
  <xacro:sensor_d435 name="camera" topics_ns="arm_module_camera" parent="camera_mount">
    <!-- Define the origin where the camera will be attached -->
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  </xacro:sensor_d435>


  <!-- Attach the components together -->
  <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="platform"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <joint name="pillar_to_base_joint" type="fixed">
          <parent link="pillar"/>
          <child link="base_link"/>
          <origin xyz="0 0 0.470" rpy="0 0 ${-pi/2}"/> <!-- Position at the top of the pillar -->
  </joint>

  <link name="tool0_controller"/>
  <joint name="tool_controller_fake_joint" type="fixed">
    <parent link="tool0"/>
    <child link="tool0_controller"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>




</robot>